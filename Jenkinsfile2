pipeline{
    agent any
    tools{
        maven 'M2_HOME'
    }
    stages{
         stage('sonarqube scan'){
            agent {docker { image 'maven:3-amazoncorretto-17-debian' }}
            steps{
                withSonarQubeEnv('Sonarserver'){
                sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=kahonon0818_week16-code'
            }
            }
        }
        stage('all maven commands'){
            steps{
                sh 'mvn clean test compile install package'
            }
        }
        stage('upload artifact'){
            steps{
             sh 'curl -uadmin:AP8n3SdR7XFa1MHTVQrdWpgH5gX -T \
             target/bio*.jar \
             "http://54.152.30.129:8081/artifactory/geoapp/"'   
            }
        }
        stage('image build'){
            steps{
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 515128234975.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker build -t geoapp .'
            }
        }
        stage('push image'){
            steps{
                sh 'docker tag geoapp:latest 515128234975.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
              sh 'docker push 515128234975.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'  
            }
        }
    
       
    }
}
